//Simple linear regression

//Import required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


//Load and prepare dataset
data = "BMI (1).csv"
df = pd.read_csv(data)
df.head(5)
df.info()
df.describe()
df.shape
df.size
df.isnull()
df.dtypes()

//Reshape data
# Extract independent (X) and dependent (y) variables
X = df['Height'].values
y = df['Index'].values 
# Reshape from 1D to 2D
X = X.reshape(-1, 1)
y = y.reshape(-1, 1)
print("Shape of X:", X.shape)
print("Shape of y:", y.shape)


//Split data
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3)

//Plot graph
#BMI data using a scatter plot
plt.scatter(X, y, color='blue', label='BMI Data Points')
plt.xlabel('Independent Variable')  # Replace with your actual independent variable name, e.g., 'Height'
plt.ylabel('Dependent Variable')    # Replace with your actual dependent variable name, e.g., 'Weight' or 'BMI'
plt.title('Scatter Plot of BMI Data')
plt.legend()
plt.show()


//Create Linear regression model & train the model
from sklearn.linear_model import LinearRegression
lin = LinearRegression()
lin.fit(X,y)

//Predict
y_pred = lin.predict(X)
y_pred

//Plot result
plt.scatter(X_train, y_train, color='blue', label='Training Data')
plt.plot(X_train, lin.predict(X_train), color='red', label='Regression Line')

plt.xlabel('Height') 
plt.ylabel('Index')   
plt.title('Linear Regression Fit')
plt.legend()
plt.show()


//Perform metric
from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y,y_pred)
print("MSE value: {:.4f}".format(mse))

print("Training score: {:.4f}".format(lin.score(X_train, y_train)))
print("Testing score: {:.4f}".format(lin.score(X_test, y_test)))

from sklearn.metrics import r2_score
r2 = r2_score(y, y_pred)
print("RÂ² Score using r2_score:", r2)

